else if is.na(stepmeans$mean[which(stepmeans$date==date)])=TRUE {
i<-0
}
}
}
xxxx
newstep<-activity$steps
day<-as.Date(activity$date)
stepmeans<-ddply(activity,~date,summarise,mean=mean(steps))
which(is.na(newstep))
for (i in newstep){
if is.na(i)=TRUE {
date<-day[which(newstep==i)]
if is.na(stepmeans$mean[which(stepmeans$date==date)])=FALSE {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if is.na(stepmeans$mean[which(stepmeans$date==date)])=TRUE {
i<-0
}
}
}
for (i in newstep){
if (is.na(i)=TRUE) {
date<-day[which(newstep==i)]
if (is.na(stepmeans$mean[which(stepmeans$date==date)])=FALSE) {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if (is.na(stepmeans$mean[which(stepmeans$date==date)])=TRUE) {
i<-0
}
}
}
pppppp
for (i in newstep){
if (is.na(i)=TRUE) {
date<-day[which(newstep==i)]
if (is.na(stepmeans$mean[which(stepmeans$date==date)])=FALSE) {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if (is.na(stepmeans$mean[which(stepmeans$date==date)])=TRUE) {
i<-0
}
}
}
for (i in newstep){
if (is.na(i)==TRUE) {
date<-day[which(newstep==i)]
if (is.na(stepmeans$mean[which(stepmeans$date==date)])==FALSE) {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if (is.na(stepmeans$mean[which(stepmeans$date==date)])==TRUE) {
i<-0
}
}
}
for (i in newstep){
if (is.na(i)==TRUE) {
date<-day[which(newstep==i)]
print(date)
if (is.na(stepmeans$mean[which(stepmeans$date==date)])==FALSE) {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if (is.na(stepmeans$mean[which(stepmeans$date==date)])==TRUE) {
i<-0
}
}
}
for (i in newstep){
date<-day[which(newstep==i)]
print(date)
if (is.na(i)==TRUE) {
if (is.na(stepmeans$mean[which(stepmeans$date==date)])==FALSE) {
i<-stepmeans$mean[which(stepmeans$date==date)]
}
else if (is.na(stepmeans$mean[which(stepmeans$date==date)])==TRUE) {
i<-0
}
}
}
stepmeans
for (i in 1:dim(activity)[1])
if (is.na(activity[i,1]))
df[i,1]=stepmeans[which(date==activity[i,2])]
df<-activity
for (i in 1:dim(df)[1])
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
class(df)
data.frame(df)
head(data.frame(df))
class(df$date)
?dim
dim(df)[1]
length(df)
length(df[1])
length(df[1, ])
length(df[, 1])
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
for (i in 1:length(df[, 1]))
print(i)
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
print(i)
df[i,1]=stepmeans[which(date==df[i,2])]
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
print(i)
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
print(stepmeans[which(date==df[i,2])])
df[i,2]
stepmeans[which(date==df[i,2])]
which(date==df[i,2])
date=levels(df$date)
head(date)
levels(df$date)
df$date
?levels
date<-stepmeans$date
head(date)
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2])]
print(stepmeans[which(date==df[i,2])])
stepmeans[which(date==df[i,2])]
which(date==df[i,2])
i
stepmeans[2017]
stepmeans[2017, ]
stepmeans[, 2017]
stepmeans[8, ]
stepmeans[which(date==df[i,2]), ]
stepmeans[which(date==df[i,2]), 2]
View(stepmeans)
datemeans<-ddply(activity,~date,summarise,mean=mean(steps))
stepmeans<-ddply(activity,~steps,summarise,mean=mean(steps))
View(stepmeans)
stepmeans<-ddply(activity,~interval,summarise,mean=mean(steps))
View(stepmeans)
stepmeans<-ddply(act2,~interval,summarise,mean=mean(steps))
View(stepmeans)
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(date==df[i,2]), 2]
View(df)
interval<-stepmeans$interval
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(interval==df[i,2]), 2]
View(df)
df<-activity
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(interval==df[i,2]), 2]
View(df)
head(interval)
interval==df[i,2]
i
df[i,2]
View(df)
df[i,3]
which(interval==df[i,3])
stepmeans[which(interval==df[i,3]), 2]
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(interval==df[i,3]), 2]
View(df)
i
i<-1
is.na(df[i,1])
is.na(df[1,1])
is.na(activity[1,1])
activity[i, 1]
df<-activity
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(interval==df[i,3]), 2]
else (!is.na(df[i,1]))
df[i,1]=activity[i, 1]
for (i in 1:length(df[, 1])){
if (is.na(df[i,1])){
df[i,1]=stepmeans[which(interval==df[i,3]), 2]
}
else if (!is.na(df[i,1])){
df[i,1]=activity[i, 1]
}
}
View(df)
!is.na(df[i,1])
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
df[i,1]=stepmeans[which(interval==df[i,3]), 2]
else if (!is.na(df[i,1]))
df[i,1]=activity[i, 1]
}
View(df)
df<-activity
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
df[i,1]<-stepmeans[which(interval==df[i,3]), 2]
else if (!is.na(df[i,1]))
df[i,1]<-activity[i, 1]
}
View(df)
for (i in 1:length(df[, 1])){
if (is.na(df[i,1])){
df[i,1]<-stepmeans[which(interval==df[i,3]), 2]
}
else {
df[i,1]<-activity[i, 1]
}
}
View(df)
for (i in 1:length(df[, 1])){
if (is.na(df[i,1])){
df[i,1]<-stepmeans[which(interval==df[i,3]), 2]
}
else {
df[i,1]<-df[i, 1]
}
}
View(df)
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]<-stepmeans[which(interval==df[i,3]), 2]
else
df[i,1]<-df[i, 1]
for (i in 1:length(df[, 1]))
if (is.na(df[i,1]))
df[i,1]<-stepmeans[which(interval==df[i,3]), 2]
else df[i,1]<-df[i, 1]
df<-activity
View(df)
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
{ df[i,1]<-stepmeans[which(interval==df[i,3]), 2]}
else (is.na(df[i,1])==FALSE)
{df[i,1]<-df[i, 1]}
}
View(df)
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
{df[i,1]<-stepmeans[which(interval==df[i,3]), 2]}
else (is.na(df[i,1])==FALSE)
{}
}
View(df)
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
{df[i,1]<-stepmeans[which(interval==df[i,3]), 2]}
else if (is.na(df[i,1])==FALSE)
{}
}
View(df)
df<-activity
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
{df[i,1]<-stepmeans[which(interval==df[i,3]), 2]}
else if (is.na(df[i,1])==FALSE)
{}
}
View(df)
i
df[i, 1]
df[200, 1]
View(df)
df[372, 1]
View(activity)
?identical
df<-activity
for (i in 1:length(df[, 1])){
if (is.na(df[i,1]))
{df[i,1]<-stepmeans[which(interval==df[i,3]), 2]}
else if (is.na(df[i,1])==FALSE)
{df[i,1]<-df[i,1]}
}
View(df)
df[555, 1]
activity[555, 1]
qplot(steps, data=actsum2, main='Histogram for Number of Steps per Day', binwidth=1000)
View(actsum2)
dfsum2<-ddply(df, "date", summarize,
steps=sum(steps),
interval=sum(interval),
time=max(time))
df$time<-strptime((sapply(df$interval, formatC, width = 4, flag = 0)), format = "%H%M")
df$time <- format(df$time,"%H:%M")
dfsum2<-ddply(df, "date", summarize,
steps=sum(steps),
interval=sum(interval),
time=max(time))
View(dfsum2)
qplot(steps, data=dfsum2, main='Histogram for Number of Steps per Day', binwidth=1000)
qplot(steps, data=dfsum2, main='Histogram for Number of Steps per Day, using Imputed Values', binwidth=1000)
qplot(steps, data=dfsum2, main='Histogram Using Imputed Values', binwidth=1000)
qplot(steps, data=actsum2, main='Histogram for Number of Steps per Day', binwidth=1000)
qplot(steps, data=dfsum2, main='Histogram Using Imputed Values', binwidth=1000)
qplot(steps, data=actsum2, main='Histogram for Number of Steps per Day', binwidth=1000)
qplot(steps, data=dfsum2, main='Histogram Using Imputed Values', binwidth=1000)
qplot(steps, data=actsum2, main='Histogram for Number of Steps per Day', binwidth=1000)
qplot(steps, data=dfsum2, main='Histogram Using Imputed Values', binwidth=1000)
mean(dfsum2$steps)
mean(dfsum2$steps)
mean(actsum2$steps)
mean(actsum2$steps)
View(actsum2)
View(actsum)
mean(actsum2$steps)
median(actsum2$steps)
median(dfsum2$steps)
mean(dfsum2$steps)
?weekdays
weekdays(date)
for (i in 1:length(dfsum2[, 1])){
if (weekdays(dfsum2[i, 1])=='Saturday')
{dfsum2$weekend<-'weekend'}
else if ((weekdays(dfsum2[i, 1])=='Sunday'))
{dfsum2$weekend<-'weekend'}
else {dfsum2$weekend<-'weekday'
}
}
View(dfsum2)
weekdays(dfsum2[i, 1])
weekdays(dfsum2[1, 1])
weekdays(dfsum2[2, 1])
weekdays(dfsum2[3, 1])
weekdays(dfsum2[7, 1])
for (i in 1:length(dfsum2[, 1])){
if (weekdays(dfsum2[i, 1])=="Saturday")
{dfsum2$weekend[i]<-'weekend'}
else if ((weekdays(dfsum2[i, 1])=="Sunday"))
{dfsum2$weekend[i]<-'weekend'}
else {dfsum2$weekend[i]<-'weekday'}
}
View(dfsum2)
weekday(20012-10-07)
weekdays(20012-10-07)
weekdays("20012-10-07")
weekdays("2012-10-07")
weekdays(as.date("2012-10-07")
)
weekdays(as.Date("2012-10-07"))
View(df)
for (i in 1:length(df[, 2])){
if (weekdays(df[i, 2])=="Saturday")
{df$weekend[i]<-'weekend'}
else if ((weekdays(df[i, 2])=="Sunday"))
{df$weekend[i]<-'weekend'}
else {df$weekend[i]<-'weekday'}
}
}
for (i in 1:length(df[, 2])){
if (weekdays(df[i, 2])=="Saturday")
{df$weekend[i]<-'weekend'}
else if ((weekdays(df[i, 2])=="Sunday"))
{df$weekend[i]<-'weekend'}
else {df$weekend[i]<-'weekday'}
}
View(df)
View(df)
?ddply
dfweekend<-ddply(df, "time", "weekend",summarize,
date=mode(date),
steps=mean(steps),
interval=max(interval),
time=max(time))
dfweekend<-ddply(df, "time" & "weekend",summarize,
date=mode(date),
steps=mean(steps),
interval=max(interval),
time=max(time))
dfweekend<-ddply(df, "time" | "weekend",summarize,
date=mode(date),
steps=mean(steps),
interval=max(interval),
time=max(time))
stepmeans<-ddply(act2,~interval,summarise,mean=mean(steps))
View(stepmeans)
View(act2)
stepmeans<-ddply(act2,~interval*date,summarise,mean=mean(steps))
View(stepmeans)
dfweekend<-ddply(df,~time*weekend,summarise,mean=mean(steps))
View(dfweekend)
dfweekend<-ddply(df,~time*weekend,summarise,
date=mode(date),
steps=mean(steps),
interval=max(interval),
time=max(time))
View(dfweekend)
?format
dfweekend<-ddply(df,~time*weekend,summarise,
date=mode(date),
steps=format(mean(steps), scientific = NA),
interval=max(interval),
time=max(time))
View(dfweekend)
?plot
plot(dfweekend$interval, dfweekend$steps, panel=dfweekend$weekend)
plot(x=dfweekend$interval, y=dfweekend$steps, panel=dfweekend$weekend)
plot(x=interval, y=steps, data=dfweekend, panel=dfweekend$weekend)
plot(x, y)
x<-dfweekend$interval
y<-dfweekend$steps
plot(x, y)
plot(x, y, type='l')
z<-dfweekend$weekend
plot(x, y, type='l', panel=z)
plot(x, y, type='l', factor=z)
z <- transform(dfweekend, weekend = factor(weekend))
class(z)
dfweekend <- transform(dfweekend, weekend = factor(weekend))
class(dfweekend$weekend)
z<-dfweekend$weekend
head(z)
xyplot(x~y|z)
library(lattice)
xyplot(x~y|z)
xyplot(x~y|z, type='l')
xyplot(y~x|z, type='l')
xyplot(y~x|z, type='l', layout=c1, 2)
xyplot(y~x|z, type='l', layout=c(1, 2)
)
xyplot(y~x|z, type='l', layout=c(1, 2))
View(dfsum2)
View(actsum2)
View(intervalsum2)
xyplot(interval~steps, data=intervalsum2, type='l')
xyplot(steps~interval, data=intervalsum2, type='l')
xyplot(steps~interval|weekend, data=dfweekend, type='l', layout=c(1, 2))
xyplot(steps~interval, data=dfweekend, type='l')
xyplot(steps~interval, data=dfweekend)
?sort
?order
?sort
test<-sort(dfweekend$weekend)
head(test)
test<-dfweekend[order(weekend) , ]
test<-dfweekend[order(dfweekend$weekend) , ]
head(test)
xyplot(steps~interval|weekend, data=test, type='l', layout=c(1, 2))
xyplot(steps~interval, data=test, type='l', layout=c(1, 2))
xyplot(steps~interval, data=test, type='l')
xyplot(steps~interval, data=dfweekend, type='l')
xyplot(steps~interval, data=test, type='l')
xyplot(steps~interval, data=dfweekend, type='l')
View(test)
xyplot(steps~interval|weekend, data=test, type='l', layout=c(1, 2))
xyplot(steps~interval|weekend, data=dfweekend, type='l', layout=c(1, 2))
class(dfweekend$weekend)
xyplot(interval~steps|weekend, data=dfweekend, type='l', layout=c(1, 2))
qplot(steps, data=dfweekend, main='Histogram for Number of Steps per Day',binwidth=1000)
qplot(steps, data=dfweekend, main='???', binwidth=1000)
qplot(steps, data=dfweekend, main='???')
qplot(steps, data=test, main='???')
qplot(interval, data=test, main='???')
qplot(interval, data=test, main='???', binwidth=5)
qplot(interval, data=test, main='???', binwidth=10)
qplot(interval, data=test, main='???', binwidth=15)
qplot(interval, data=test, main='???', binwidth=20)
qplot(interval, data=test, main='???', binwidth=100)
qplot(interval, data=test, main='???', binwidth=40)
qplot(interval, data=test, main='???', binwidth=50)
qplot(interval, data=test, main='???', binwidth=5)
qplot
?qplot
qplot(interval, data=test, main='???', binwidth=5, facets=weekend)
View(mpg)
qplot(mpg, wt, data=mtcars, facets=vs ~ am)
qplot(mpg, wt, data=mtcars, facets=vs)
qplot(mpg, wt, data=mtcars)
qplot(mpg, wt, data=mtcars, facets=vs ~ am)
View(mtcars)
qplot(mpg, wt, data=mtcars, facets=vs ~ .)
qplot(mpg, wt, data=mtcars, facets=.~ am)
qplot(interval, data=test, main='???', binwidth=5, facets=.~weekend)
qplot(interval, steps, data=test, main='???', binwidth=5, facets=.~weekend)
qplot(interval, steps, data=test, main='???')
?qplot
qplot(interval, steps, data=test, main='???', type=l)
qplot(interval, steps, data=test, main='???', type="l")
ggplot(data = test, aes(interval, steps )) + geom_line() + scale_x_continuous(breaks=a1, labels=q1) + ylab("Average Steps Per 5-Minute Interval") + xlab("Time Interval")
ggplot(data = test, aes(interval, steps )) + geom_line()
?ggplot
ggplot(data=test,
aes(x=time, y=steps, colour=weekday))
ggplot(data=test, aes(x=interval, y=steps, colour=weekday))
class(test$steps)
class(test$steps)<-as.numeric(test$steps)
class(test$steps)
class(test$steps)
test$steps<-as.numeric(test$steps)
class(test$steps)
ggplot(data=test, aes(x=interval, y=steps, colour=weekday))
class(test$interval)
class(test$time)
ggplot(data=test, aes(x=interval, y=steps, colour=weekday))
ggplot(data=test, aes(x=interval, y=steps, color=weekday))
ggplot(data=test, aes(x=interval, y=steps, color=weekday))+geom_line()
ggplot(data=test, aes(x=interval, y=steps, color=weekend))+geom_line()
ggplot(data=test, aes(x=interval, y=steps, color=weekend))+geom_line() + facet_grid(. ~ weekend)
ggplot(data=test, aes(x=interval, y=steps, color=weekend))+geom_line() + facet_grid(weekend~.)
xyplot(steps~interval|weekend, data=dfweekend, type='l', layout=c(1, 2))
xyplot(steps~interval|weekend, data=test, type='l', layout=c(1, 2))
dfweekend$steps<-as.numeric(dfweekend$steps)
View(dfweekend)
ggplot(data=dfweekend, aes(x=interval, y=steps, color=weekend))+geom_line() + facet_grid(weekend~.)
